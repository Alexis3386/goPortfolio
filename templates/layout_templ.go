// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.663
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func header(title string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"keywords\" content=\"\"><meta name=\"description\" content=\"\"><title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates\layout.templ`, Line: 9, Col: 16}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</title><!-- Loading Bootstrap --><link href=\"static/css/bootstrap.css\" rel=\"stylesheet\"><!-- Loading Template CSS --><link href=\"static/css/style.css\" rel=\"stylesheet\"><link href=\"static/css/animate.css\" rel=\"stylesheet\"><link href=\"static/css/style-magnific-popup.css\" rel=\"stylesheet\"><!-- Font Awesome --><link href=\"static/css/fonts.css\" rel=\"stylesheet\"><!-- Google Fonts --><link href=\"https://fonts.googleapis.com/css?family=Roboto:400,300,500,700,100\" rel=\"stylesheet\" type=\"text/css\"><link href=\"http://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700\" rel=\"stylesheet\" type=\"text/css\"><!-- Font Favicon --><link rel=\"shortcut icon\" href=\"images/favicon.ico\"><!-- HTML5 shim, for IE6-8 support of HTML5 elements. All other JS at the end of file. --><!--[if lt IE 9]>\r\n      <script src=\"js/html5shiv.js\"></script>\r\n      <script src=\"js/respond.min.js\"></script>\r\n    <![endif]--><!--headerIncludes--></head>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func footer() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"footer\"><!--begin container --><div class=\"container\"><!--begin row --><div class=\"row\"><!--begin col-md-12 --><div class=\"col-md-12 text-center\"><!--begin copyright --><div class=\"copyright\"><p class=\"footer-logo\"><span class=\"blue\">Alexis</span> Mathiot</p><p>Copyright © 2024. Designed &amp; Developed by <a href=\"http://themeforest.net/user/bogdan_09/portfolio?ref=bogdan_09\" target=\"_blank\">Bogdan Preda</a></p></div><!--end copyright --><!--begin footer_social --><ul class=\"footer_social\"><li><a href=\"#\"><i class=\"icon icon-twitter\"></i></a></li><li><a href=\"#\"><i class=\"icon icon-pinterest\"></i></a></li><li><a href=\"#\"><i class=\"icon icon-facebook\"></i></a></li><li><a href=\"#\"><i class=\"icon icon-instagram\"></i></a></li><li><a href=\"#\"><i class=\"icon icon-skype\"></i></a></li><li><a href=\"#\"><i class=\"icon icon-dribble\"></i></a></li></ul><!--end footer_social --></div><!--end col-md-6 --></div><!--end row --></div><!--end container --></div><!--end footer --><!-- Load JS here for greater good =============================--><script src=\"static/js/jquery-1.11.3.min.js\"></script><script src=\"static/js/bootstrap.min.js\"></script><script src=\"static/js/jquery.magnific-popup.min.js\"></script><script src=\"static/js/jquery.nav.js\"></script><script src=\"static/js/jquery.scrollTo-min.js\"></script><script src=\"static/js/SmoothScroll.js\"></script><script src=\"static/js/wow.js\"></script><script src=\"static/js/custom.js\"></script><script src=\"static/js/plugins.js\"></script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func nav() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!--begin navbar --><header class=\"header\"><!--begin nav --><nav class=\"navbar navbar-default navbar-fixed-top\"><!--begin container --><div class=\"container\"><!--begin navbar --><div class=\"navbar-header\"><button data-target=\"#navbar-collapse-02\" data-toggle=\"collapse\" class=\"navbar-toggle\" type=\"button\"><span class=\"sr-only\">Toggle navigation</span> <span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span></button> <a href=\"/\" class=\"navbar-brand brand scrool\"><span class=\"blue\">Alexis</span> Mathiot</a></div><div id=\"navbar-collapse-02\" class=\"collapse navbar-collapse\"><ul class=\"nav navbar-nav navbar-right\"><li><a href=\"#home_wrapper\">A Propos</a></li><li><a href=\"#features\">Compétences</a></li><li><a href=\"#portfolio\">Portfolio</a></li><li><a href=\"#blog\">Blog</a></li><li><a href=\"#contact\" class=\"purchase scrool\">Contact</a></li></ul></div><!--end navbar --></div><!--end container --></nav><!--end nav --></header><!--end navbar -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func hero() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var5 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var5 == nil {
			templ_7745c5c3_Var5 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<section id=\"home_wrapper\" class=\"home-wrapper\"><!--begin gradient_overlay --><div class=\"gradient_overlay\"></div><!--end gradient_overlay --><!--begin container--><div class=\"container home-wrappe-inside\"><!--begin row--><div class=\"row margin-bottom-30 justify-content-center\"><!--begin col-md-6--><div class=\"col-md-10 padding-top-20\"><h1 class=\"home-title wow fadeIn\" data-wow-delay=\"0.25s\">Développeur Web spécialisé en PHP et Symfony<br>je crée des sites et des applications web.</h1><ul class=\"features-list-hero\"><li class=\"wow fadeIn\" data-wow-delay=\"0.5s\"><i class=\"icon icon-design-pencil-rule-streamline\"></i> Tendis tempor ante acu ipsum finibus, et atimus etims urna netsumiteda qui ratione lorem nets et sequi tempor.\r</li><li class=\"wow fadeIn\" data-wow-delay=\"0.75s\"><i class=\"icon icon-arrow-streamline-target\"></i> Neque tempor ante acu ipsum nis finibus, atime quiamis ets netsumiteda qui tempor magni ets ipsum finibus.\r</li><li class=\"wow fadeIn\" data-wow-delay=\"1s\"><i class=\"icon icon-speech-streamline-talk-user\"></i> Etiam tempor ante acu ipsum net finibus, atimus veilite nis netsumitedas qui tempor ratione estimat ipsum.\r</li></ul></div><!--end col-md-6--></div><!--end row--></div><!--end container--></section>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func Layout(title string, hasHero bool, content templ.Component) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var6 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var6 == nil {
			templ_7745c5c3_Var6 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = header(title).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<body>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = nav().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if hasHero {
			templ_7745c5c3_Err = hero().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<main>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = content.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</main>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = footer().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</body>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
